#include <iostream>
#include <string>
using namespace std;

// A. GPA Converter: Converts average percentage into GWA (1.0 - 5.0 scale)
float getGrade(float average) {
    if (average >= 96) return 1.0;
    else if (average >= 94) return 1.25;
    else if (average >= 92) return 1.5;
    else if (average >= 90) return 1.75;
    else if (average >= 88) return 2.0;
    else if (average >= 86) return 2.25;
    else if (average >= 84) return 2.5;
    else if (average >= 82) return 2.75;
    else if (average >= 80) return 3.0;
    else return 5.0;
}

int main() {
    string name, id;
    int age, gradeLevel, birthYear;
    float math, science, english, history, art;

    cout << "Enter Name: ";
    getline(cin, name);
    cout << "Enter ID: ";
    getline(cin, id);
    cout << "Enter Age: ";
    cin >> age;
    cout << "Enter Grade Level: ";
    cin >> gradeLevel;
    cout << "Enter Birth Year: ";
    cin >> birthYear;

    // C. Input Validation: Rejects invalid grades (must be 0-100)
    cout << "\nEnter your grades for the following subjects:" << endl;

    cout << "Math: ";
    cin >> math;
    if (math < 0 || math > 100) {
        cout << "INVALID NUMERICAL GRADE, must be 0-100" << endl;
        return 0;
    } else {
        cout << "Grade is valid" << endl;
    }

    cout << "Science: ";
    cin >> science;
    if (science < 0 || science > 100) {
        cout << "INVALID NUMERICAL GRADE, must be 0-100" << endl;
        return 0;
    } else {
        cout << "Grade is valid" << endl;
    }

    cout << "English: ";
    cin >> english;
    if (english < 0 || english > 100) {
        cout << "INVALID NUMERICAL GRADE, must be 0-100" << endl;
        return 0;
    } else {
        cout << "Grade is valid" << endl;
    }

    cout << "History: ";
    cin >> history;
    if (history < 0 || history > 100) {
        cout << "INVALID NUMERICAL GRADE, must be 0-100" << endl;
        return 0;
    } else {
        cout << "Grade is valid" << endl;
    }

    cout << "Art: ";
    cin >> art;
    if (art < 0 || art > 100) {
        cout << "INVALID NUMERICAL GRADE, must be 0-100" << endl;
        return 0;
    } else {
        cout << "Grade is valid" << endl;
    }

    //  Grade Statistics: Calculate average, highest, lowest, passing subjects
    float average = (math + science + english + history + art) / 5.0;
    float gwa = getGrade(average);

    float highest = math;
    if (science > highest) highest = science;
    if (english > highest) highest = english;
    if (history > highest) highest = history;
    if (art > highest) highest = art;

    float lowest = math;
    if (science < lowest) lowest = science;
    if (english < lowest) lowest = english;
    if (history < lowest) lowest = history;
    if (art < lowest) lowest = art;

    int passed = 0;
    if (math >= 60) passed++;
    if (science >= 60) passed++;
    if (english >= 60) passed++;
    if (history >= 60) passed++;
    if (art >= 60) passed++;

    //  Report Card Output
    cout << "\n       STUDENT REPORT CARD" << endl;
    cout << "========================================" << endl;

    cout << "\nSTUDENT INFORMATION:" << endl;
    cout << "Name: " << name << endl;
    cout << "ID: " << id << endl;
    cout << "Age: " << age << " years old" << endl;
    cout << "Grade Level: " << gradeLevel << endl;
    cout << "Birth Year: " << birthYear << endl;

    cout << "\nSUBJECT GRADES:" << endl;
    cout << "Math: " << math << "%" << endl;
    cout << "Science: " << science << "%" << endl;
    cout << "English: " << english << "%" << endl;
    cout << "History: " << history << "%" << endl;
    cout << "Art: " << art << "%" << endl;

    cout << "\nGRADE STATISTICS:" << endl;
    cout << "Average Grade: " << average << "%" << endl;
    cout << "Highest Grade: " << highest << "%" << endl;
    cout << "Lowest Grade: " << lowest << "%" << endl;
    cout << "Subjects Passed: " << passed << " out of 5" << endl;
    cout << "GWA: " << gwa << endl;

    // B. DL Check: Determines if student qualifies for Director's List
    if (gwa <= 1.5)
        cout << "Director’s List Status: YES (Congratulations!)" << endl;
    else
        cout << "Director’s List Status: NO" << endl;

    cout << "========================================" << endl;

    return 0;
}
